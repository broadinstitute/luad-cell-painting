'''
Script to extract locations from CellProfiler
'''
import sqlite3
import argparse
import csv
from collections import defaultdict
import os.path
from os import makedirs

parser = argparse.ArgumentParser(
    description='Extract locations from SQLite database generated by CellProfiler')
parser.add_argument('dbpath', help='.db file location')
parser.add_argument(
    'csvdir', help='destination folder to write locations in csv format')

args = parser.parse_args()

QUERY = '''
SELECT
    Image_FileName_OrigDNA AS filename,
    Image_Metadata_Plate AS plate_id,
    Image_Metadata_Site AS site_id,
    Image_Metadata_Well AS well_id,
    CAST(Nuclei_Location_Center_X AS INTEGER),
    CAST(Nuclei_Location_Center_Y AS INTEGER)
FROM
    Nuclei
JOIN Image ON
    Image.TableNumber = Nuclei.TableNumber
'''
locations = defaultdict(list)
with sqlite3.connect(args.dbpath) as conn:
    cur = conn.cursor()
    for row in cur.execute(QUERY):
        fname, plate_id, site_id, well_id, xpos, ypos = row
        csvfile = f'{well_id}-{site_id}-Nuclei.csv'
        locations[csvfile].append((xpos, ypos))

makedirs(args.csvdir, exist_ok=True)
header = 'Nuclei_Location_Center_X', 'Nuclei_Location_Center_Y'
for csvfile, values in locations.items():
    csvpath = os.path.join(args.csvdir, csvfile)
    with open(csvpath, 'w', newline='', encoding='utf-8') as fpointer:
        writer = csv.writer(fpointer)
        writer.writerow(header)
        for row in values:
            writer.writerow(row)
